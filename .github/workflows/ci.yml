name: ci

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "**.md"
      - "README.md"
      - "LICENSE"
      - ".gitignore"
  pull_request:
    branches: [ main ]
    paths-ignore:
      - "**.md"
      - "README.md"
      - "LICENSE"
      - ".gitignore"

jobs:
  linux:
    name: "test on ubuntu-latest"
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install LLVM/Clang 15
      run: sudo apt-get update && sudo apt-get install llvm-15 clang-15

    - name: Install lld
      run: sudo apt-get install lld

    - name: Install libcurl4-openssl-dev
      run: sudo apt-get install libcurl4-openssl-dev

    - run: sudo ln -s /usr/bin/lld /usr/bin/ld64.lld
      
    - name: Build Ki
      run: make

    - name: Test(linux-x64)
      run: ./ki build ./test/*.ki --test -r

    - name: Build test(cross compiling) for macos-x64
      run: ./ki build ./test/*.ki -o _test --target macos-x64
    
    - name: Build test(cross compiling) for macos-arm64
      run: ./ki build ./test/*.ki -o _test --target macos-arm64
    
    - name: Build test(cross compiling) for win-x64
      run: ./ki build ./test/*.ki -o _test.exe --target win-x64
    
  macos:
    name: "test on macos-latest"
    strategy:
      fail-fast: false
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - run: brew install llvm@15 && brew link llvm@15
    
    - name: Build Ki
      run: make

    - name: Test(macos-x64)
      run: ./ki build ./test/*.ki --test -r

    - name: Build test(cross compiling) for linux-x64
      run: ./ki build ./test/*.ki -o _test --target linux-x64
    
    - name: Build test(cross compiling) for macos-arm64
      run: ./ki build ./test/*.ki -o _test --target macos-arm64
    
    - name: Build test(cross compiling) for win-x64
      run: ./ki build ./test/*.ki -o _test.exe --target win-x64

  windows:
    name: "test on windows-latest(MSYS2)"
    strategy:
      fail-fast: false
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          curl
          make
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-llvm-15
          mingw-w64-x86_64-clang-15
          mingw-w64-x86_64-lld
    - uses: actions/checkout@v3

    - name: Build Ki
      run: make
    
    - name: Test(win-x64)
      run: ./ki build ./test/*.ki --test -r

    - name: Build test(cross compiling) for linux-x64
      run: ./ki build ./test/*.ki -o _test --target linux-x64

    - name: Build test(cross compiling) for macos-x64
      run: ./ki build ./test/*.ki -o _test --target macos-x64
    
    - name: Build test(cross compiling) for macos-arm64
      run: ./ki build ./test/*.ki -o _test --target macos-arm64
