
use mem;

class ptr type:ptr math async {

	fn str() String {
        let num = this @as uxx;
        return num.str_base(16);
    }

    fn debug() void {
        let num = this @as uxx;
        num.debug_base(16);
    }

    fn print_bytes(count: uxx) void {
        let i : uxx = 0;
        while i < count {
            if i > 0 {
                print(" ");
            }
            let b = @ptrv(this, u8, i);
            print(b.str_base(16));
            i++;
        }
    }

    static fn write_string_bytes(adr: ptr, str: *String) void {
        let data = str.data();
        mem:copy(data, adr, str.bytes());
    }

	fn free() {
		mem:free(this);
	}
}
