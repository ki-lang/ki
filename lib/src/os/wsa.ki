
header "sys" as sys;

use mem;

#if OS == win

global WSA_INITED : bool;

fn WSA_init() void {
    if WSA_INITED == false {
        WSA_INITED = true;

        let v : u16 = 0; 
        let v_ptr = @ptr_of(v);
        @ptrv(v_ptr, u8, 0) = 2;
        @ptrv(v_ptr, u8, 1) = 2;

        let data = mem:alloc(sizeof(.sys.WSADATA)) @as sys.WSADATA;
        let err = sys.WSAStartup(v, data);
        if err != 0 {
			println("WSA startup error: " + sys.WSAGetLastError().str());
            panic("Windows WSAStartup failed");
        }
    }
}

fn WSA_unix_fd(fd: uxx) i32 {
    if fd == (0^-1) @as uxx {
        return -1;
    }
    return fd @as i32;
}

#end
