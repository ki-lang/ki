
header "sys" as sys;

use mem;

fn print(str: &String) void {
    let byte_count = sys.write(1, str.data(), str.bytes());
    //if (byte_count < 0 && (sys.errno == EAGAIN || sys.errno == EWOULDBLOCK)) {
	//    throw err
    //}
}

fn println(str: &String) void {
	let size = str.bytes();
	let rsize = size + 1;
	let adr = @stack_alloc(rsize + 8 + sizeof(uxx));
	let adr_ = adr;
	@ptrv(adr, uxx, 0) = rsize;
	adr += sizeof(uxx);
	@ptrv(adr, u8, 0) = 0#u8;
	adr += 4;
	@ptrv(adr, u32, 0) = 1#u32;
	let res = adr_ @as &String;
	let data_adr = str.data();
	let res_data_adr = res.data();
	mem:copy(data_adr, res_data_adr, size);
	@ptrv(res_data_adr, u8, size) = '\n';
	print(res);
}
